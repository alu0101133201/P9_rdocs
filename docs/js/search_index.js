var search_data = {"index":{"searchIndex":["alimento","lista","object","plato","plato2","pract6","error","<=>()","<=>()","<=>()","ch()","each()","energia()","energia_mayor()","extraer_cabeza()","extraer_cola()","g()","gei()","gei_anual()","gei_diario()","generar_precio()","huella_nutricional()","impacto_ambiental_h()","impacto_ambiental_m()","insertar_cabeza()","insertar_cola()","insertar_multi_cabeza()","insertar_multi_cola()","lip()","new()","new()","new()","new()","porcentaje_hid()","porcentaje_lip()","porcentaje_prot()","prot()","t()","t_anual()","t_diario()","terreno()","to_s()","to_s()","to_s()","to_s()","vacia()","vct()","gemfile","gemfile.lock","guardfile","pract6.gemspec","readme","rakefile","setup"],"longSearchIndex":["alimento","lista","object","plato","plato2","pract6","pract6::error","alimento#<=>()","plato#<=>()","plato2#<=>()","alimento#ch()","lista#each()","alimento#energia()","alimento#energia_mayor()","lista#extraer_cabeza()","lista#extraer_cola()","alimento#g()","plato2#gei()","object#gei_anual()","object#gei_diario()","object#generar_precio()","plato2#huella_nutricional()","object#impacto_ambiental_h()","object#impacto_ambiental_m()","lista#insertar_cabeza()","lista#insertar_cola()","lista#insertar_multi_cabeza()","lista#insertar_multi_cola()","alimento#lip()","alimento::new()","lista::new()","plato::new()","plato2::new()","plato#porcentaje_hid()","plato#porcentaje_lip()","plato#porcentaje_prot()","alimento#prot()","alimento#t()","object#t_anual()","object#t_diario()","plato2#terreno()","alimento#to_s()","lista#to_s()","plato#to_s()","plato2#to_s()","lista#vacia()","plato#vct()","","","","","","",""],"info":[["Alimento","","Alimento.html","","<p>Clase que define un alimento\n<p>Autor &mdash; Sergio Guerra Arencibia\n\n"],["Lista","","Lista.html","","<p>Definición de clase que implementa una lista doblemente enlazada\n<p>Autor &mdash; Sergio Guerra Arencibia\n\n"],["Object","","Object.html","",""],["Plato","","Plato.html","","<p>Clase que definirá la clase plato (padre)\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Autor</span><span class=\"ruby-operator\">::</span> <span class=\"ruby-constant\">Sergio</span> <span class=\"ruby-constant\">Guerra</span> <span class=\"ruby-constant\">Arencibia</span>\n</pre>\n"],["Plato2","","Plato2.html","","<p>Clase que define el objeto plato 2. Es hijo de la clase plato\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Autor</span><span class=\"ruby-operator\">::</span> <span class=\"ruby-constant\">Sergio</span> <span class=\"ruby-constant\">Guerra</span> <span class=\"ruby-constant\">Arencibia</span>\n</pre>\n"],["Pract6","","Pract6.html","",""],["Pract6::Error","","Pract6/Error.html","",""],["<=>","Alimento","Alimento.html#method-i-3C-3D-3E","(other)","<p>Método &lt;=&gt; \n<p>Método para hacer la clase comparable Recibe otro objeto alimento\n"],["<=>","Plato","Plato.html#method-i-3C-3D-3E","(other)","<p>Método &lt;=&gt;\n<p>Hace que los platos sean comparables en función a su vct Recibe otro elemento Plato\n"],["<=>","Plato2","Plato2.html#method-i-3C-3D-3E","(other)","<p>Método &lt;=&gt;\n<p>Redefine el método &lt;=&gt; para hacer comparable en base a la huella nutricional   …\n"],["ch","Alimento","Alimento.html#method-i-ch","(cantidad)","<p>Método ch \n<p>método que devuelve la cantidad de carbohidratos Recibe la cantidad de alimento para la que …\n"],["each","Lista","Lista.html#method-i-each","()","<p>Método each\n<p>Método para hacer la clase enumerable\n"],["energia","Alimento","Alimento.html#method-i-energia","(cantidad)","<p>Método energia \n<p>Devuelve la cantidad  Recibe la cantidad de alimento para la que se quieren calcular la …\n"],["energia_mayor","Alimento","Alimento.html#method-i-energia_mayor","(alimento)","<p>Método energia_mayor \n<p>Devuelve el alimento con mayor energía\n<p>Recibe otro objeto alimento\n"],["extraer_cabeza","Lista","Lista.html#method-i-extraer_cabeza","()","<p>Método extraer_cabeza \n<p>Método para extraer un elemento por la cabeza en la cabeza Recibe el elemento que …\n"],["extraer_cola","Lista","Lista.html#method-i-extraer_cola","()","<p>Método extraer_cola\n<p>Método para extraer un elemento por la cabeza en la cola Recibe el elemento que se …\n"],["g","Alimento","Alimento.html#method-i-g","(cantidad)","<p>Método g\n<p>método que devuelve la cantidad de gases Recibe la cantidad de alimento para la que se quieren …\n"],["gei","Plato2","Plato2.html#method-i-gei","()","<p>Método gei \n<p>Devuelve los gases de efecto invernadero de un plato\n"],["gei_anual","Object","Object.html#method-i-gei_anual","(x,y)","<p>Función que calcula los gases de efecto invernadero emitidos anualmente por un conjunto de alimentos …\n"],["gei_diario","Object","Object.html#method-i-gei_diario","(x,y)","<p>Función que calcula los gases de efecto invernadero emitidos a diario por un conjunto de alimentos Recibe …\n"],["generar_precio","Object","Object.html#method-i-generar_precio","(menu,precios)","<p>Función que modifica los precios de un menú en función de la máxima huella nutricional del menú Recibe …\n"],["huella_nutricional","Plato2","Plato2.html#method-i-huella_nutricional","()","<p>Método huella_nutricional \n<p>Devuelve la huella nutricional de un plato\n"],["impacto_ambiental_h","Object","Object.html#method-i-impacto_ambiental_h","(alimentos)","<p>Función que calculo el impacto ambiental diario de un hombre\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Recibe</span> <span class=\"ruby-identifier\">un</span> <span class=\"ruby-identifier\">conjunto</span> <span class=\"ruby-identifier\">enumerable</span> <span class=\"ruby-identifier\">de</span> <span class=\"ruby-identifier\">alimentos</span>\n</pre>\n"],["impacto_ambiental_m","Object","Object.html#method-i-impacto_ambiental_m","(alimentos)","<p>Función que calculo el impacto ambiental diario de una mujer\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Recibe</span> <span class=\"ruby-identifier\">un</span> <span class=\"ruby-identifier\">conjunto</span> <span class=\"ruby-identifier\">enumerable</span> <span class=\"ruby-identifier\">de</span> <span class=\"ruby-identifier\">alimentos</span>\n</pre>\n"],["insertar_cabeza","Lista","Lista.html#method-i-insertar_cabeza","(x)","<p>Método insertar_cabeza\n<p>Método para insertar un elemento por la cabeza en la lista\n<p>Recibe el elemento que …\n"],["insertar_cola","Lista","Lista.html#method-i-insertar_cola","(x)","<p>Método insertar_cola\n<p>Método para insertar un elemento por la cola en la lista\n<p>Recibe el elemento que se …\n"],["insertar_multi_cabeza","Lista","Lista.html#method-i-insertar_multi_cabeza","(array)","<p>Método insertar_multi_cabeza\n<p>Método para insertar varios elementos por la cabeza en la lista\n<p>Recibe un …\n"],["insertar_multi_cola","Lista","Lista.html#method-i-insertar_multi_cola","(array)","<p>Método insertar_multi_cola\n<p>Método para insertar varios elementos por la cabeza en la cola Recibe un array …\n"],["lip","Alimento","Alimento.html#method-i-lip","(cantidad)","<p>Método lip\n<p>método que devuelve la cantidad de lipidos Recibe la cantidad de alimento para la que se quieren …\n"],["new","Alimento","Alimento.html#method-c-new","(n,p,c,l,g,t)","<p>Método initialize\n<p>Inicializa la el alimento con sus valores asignados Parámetros que recibe: nombre, proteinas, …\n"],["new","Lista","Lista.html#method-c-new","()","<p>Método initialize\n<p>Inicializa la lista con sus atributos apuntando a nulo (lista vacía)\n"],["new","Plato","Plato.html#method-c-new","(nombre,alimentos,cantidades)","<p>Método initialize\n<p>Inicializa el plato con sus parámetros correspondientes Parámetros: nombre, alimentos …\n"],["new","Plato2","Plato2.html#method-c-new","(x,y,z)","<p>Método initialize\n<p>Inicializa la lista con sus atributos 3 atributos Parámetros: nombre, lista con los …\n"],["porcentaje_hid","Plato","Plato.html#method-i-porcentaje_hid","()","<p>Método porcentaje_hid\n<p>Devuelve el porcentaje de carbohidratos que tiene el plato\n"],["porcentaje_lip","Plato","Plato.html#method-i-porcentaje_lip","()","<p>Método porcentaje_lip\n<p>Devuelve el porcentaje de lípidos que tiene el plato\n"],["porcentaje_prot","Plato","Plato.html#method-i-porcentaje_prot","()","<p>Método porcentaje_prot\n<p>Devuelve el porcentaje de proteinas que tiene el plato\n"],["prot","Alimento","Alimento.html#method-i-prot","(cantidad)","<p>Método prot \n<p>método que devuelve la cantidad de proteinas Recibe la cantidad de alimento para la que se …\n"],["t","Alimento","Alimento.html#method-i-t","(cantidad)","<p>Método t\n<p>método que devuelve la cantidad de terreno Recibe la cantidad de alimento para la que se quieren …\n"],["t_anual","Object","Object.html#method-i-t_anual","(x,y)","<p>Función que calcula el terreno empleado anualmente por un conjunto de alimentos Recibe un conjunto de …\n"],["t_diario","Object","Object.html#method-i-t_diario","(x,y)","<p>Función que calcula el terreno empleado a diario por un conjunto de alimentos Recibe un conjunto de alimentos …\n"],["terreno","Plato2","Plato2.html#method-i-terreno","()","<p>Método terreno \n<p>Devuelve el terreno necesario para la elaboración de un plato\n"],["to_s","Alimento","Alimento.html#method-i-to_s","()","<p>Método to_s \n<p>Convierte la lista a string\n"],["to_s","Lista","Lista.html#method-i-to_s","()","<p>Método to_s \n<p>Convierte la lista a string\n"],["to_s","Plato","Plato.html#method-i-to_s","()","<p>Método to_s \n<p>Convierte la lista a string\n"],["to_s","Plato2","Plato2.html#method-i-to_s","()","<p>Método to_s \n<p>Convierte la lista a string\n"],["vacia","Lista","Lista.html#method-i-vacia","()","<p>Método vacia \n<p>Método para saber si la lista está vacía o no. True vacía, false significa que contiene …\n"],["vct","Plato","Plato.html#method-i-vct","()","<p>Método vct\n<p>Devuelve la cantidad de vct del plato\n"],["Gemfile","","Gemfile.html","","<p>source “rubygems.org”\n<p>git_source(:github) {|repo_name| “github.com/#{repo_name}” } …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>PATH\n\n<pre>remote: .\nspecs:\n  Pract6 (0.1.0)</pre>\n<p>GEM\n"],["Guardfile","","Guardfile.html","","<p># A sample Guardfile # More info at github.com/guard/guard#readme\n<p>## Uncomment and set this to only include …\n"],["Pract6.gemspec","","Pract6_gemspec.html","","<p>lib = File.expand_path(“../lib”, __FILE__) $LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib) …\n"],["README","","README_md.html","","<p># Práctica 09\n<p>Nombre:\n<p>Sergio Guerra Arencibia.\n"],["Rakefile","","Rakefile.html","","<p>require “bundler/gem_tasks” require “rspec/core/rake_task”\n<p>RSpec::Core::RakeTask.new …\n"],["setup","","bin/setup.html","","<p>#!/usr/bin/env bash set -euo pipefail IFS=$&#39;nt&#39; set -vx\n<p>bundle install\n<p># Do any other automated …\n"]]}}